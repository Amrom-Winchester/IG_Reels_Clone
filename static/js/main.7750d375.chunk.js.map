{"version":3,"sources":["firebase.js","VideoFooter.jsx","VideoHeader.jsx","VideoCard.js","App.js","index.js"],"names":["firebase","auth","GoogleAuthProvider","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","firestore","storage","VideoFooter","username","imgsrc","song","likes","shares","id","useState","totalLikes","setLikes","liked","setLiked","useEffect","a","docRef","collection","doc","get","snapShot","data","console","log","className","Avatar","src","Button","mode","index","onClick","e","update","VideoHeader","VideoCard","url","isVideoPlaying","setIsVideoPlaying","videoRef","useRef","ref","current","pause","play","alt","loop","App","user","setUser","reels","setReels","onSnapshot","querySnapshot","docArr","docs","arr","i","length","push","snapshot","map","type","currentTarget","value","onChange","videoObj","files","name","size","alert","split","user0","uploadTask","Date","now","put","on","getDownloadURL","then","displayName","add","displayname","ReactDOM","render","document","getElementById"],"mappings":"kXAciB,IAAIA,IAASC,KAAKC,mBAEjCF,IAASG,cAXY,CACrBC,OAAQ,0CACRC,WAAY,uCACZC,UAAW,uBACXC,cAAe,mCACfC,kBAAmB,eACnBC,MAAO,8CAOaT,IAASC,OAAtB,IAEIS,EAAKV,IAASW,YACdC,EAAUZ,IAASY,UAQjBF,I,QC8EAG,MA7Ff,YAA2E,IAAnDC,EAAkD,EAAlDA,SAAWC,EAAuC,EAAvCA,OAASC,EAA8B,EAA9BA,KAAOC,EAAuB,EAAvBA,MAAQC,EAAe,EAAfA,OAASC,EAAM,EAANA,GAChE,EAA6BC,mBAASH,GAAtC,mBAAMI,EAAN,KAAiBC,EAAjB,KACA,EAAwBF,mBAAS,MAAjC,mBAAMG,EAAN,KAAYC,EAAZ,KAcA,OAbAC,oBAAS,sBAAE,gCAAAC,EAAA,6DACHC,EAASjB,EAAGkB,WAAW,SAASC,IAAIV,GADjC,SAEeQ,EAAOG,MAFtB,OAEHC,EAFG,QAGHF,EAAME,EAASC,QACXT,MACJC,GAAS,IAGTK,EAAIN,OAAQ,EACZC,GAAS,IAEbS,QAAQC,IAAIL,GAXL,2CAYTR,GAEE,sBAAKc,UAAU,cAAf,UACI,sBAAKA,UAAU,eAAf,UACI,cAACC,EAAA,EAAD,CAAQC,IAAOtB,IACf,+BACKD,EADL,UAEI,cAACwB,EAAA,EAAD,2BAGR,sBAAKH,UAAU,YAAf,UACI,cAAC,IAAD,CACAA,UAAU,YACV,cAAC,IAAD,CAAQI,KAAK,SAAb,SACK,cAAEC,MAAF,OACG,mCACI,6BAAKxB,YAKrB,sBAAKmB,UAAU,sBAAf,UACI,sBAAKA,UAAU,iBAAf,UACOZ,EAAS,cAAC,IAAD,CACRkB,QAAO,uCAAK,WAAOC,GAAP,SAAAhB,EAAA,yDACG,GAAPH,EADI,uBAEJC,GAAS,GAFL,SAGEd,EAAGkB,WAAW,SAASC,IAAIV,GAAIwB,OAAO,CACxCpB,OAAQ,IAJR,OAMJD,EAASD,EAAW,GANhB,8BASJG,GAAS,GATL,UAUEd,EAAGkB,WAAW,SAASC,IAAIV,GAAIwB,OAAO,CACxCpB,OAAQ,IAXR,QAaJD,EAASD,EAAW,GAbhB,4CAAL,wDAiBN,cAAC,IAAD,CACGoB,QAAO,uCAAM,WAAOC,GAAP,SAAAhB,EAAA,yDACF,GAAPH,EADS,uBAETC,GAAS,GAFA,SAGHd,EAAGkB,WAAW,SAASC,IAAIV,GAAIwB,OAAO,CACxCpB,OAAQ,IAJH,OAMTD,EAASD,EAAW,GANX,8BASTG,GAAS,GATA,UAUHd,EAAGkB,WAAW,SAASC,IAAIV,GAAIwB,OAAO,CACxCpB,OAAQ,IAXH,QAaTD,EAASD,EAAW,GAbX,4CAAN,wDAiBf,cAAC,IAAD,IACA,cAAC,IAAD,IACA,cAAC,IAAD,OAEJ,sBAAKc,UAAU,kBAAf,UACI,sBAAKA,UAAU,iBAAf,UACI,cAAC,IAAD,IACA,4BAAId,OAER,sBAAKc,UAAU,iBAAf,UACI,cAAC,IAAD,IACA,4BAAIjB,iB,2CCpFb0B,MAVf,WACI,OACI,sBAAKT,UAAU,cAAf,UACI,cAAC,IAAD,IACA,uCACA,cAAC,IAAD,QCsCGU,MA3Cf,YAA6E,IAAxDC,EAAuD,EAAvDA,IAAM7B,EAAiD,EAAjDA,MAAQC,EAAyC,EAAzCA,OAASJ,EAAgC,EAAhCA,SAAWC,EAAqB,EAArBA,OAASC,EAAY,EAAZA,KAAOG,EAAK,EAALA,GAEnE,EAA0CC,oBAAS,GAAnD,mBAAM2B,EAAN,KAAqBC,EAArB,KAGMC,EAAWC,iBAAO,MAexB,OACI,sBAAKf,UAAU,YAAf,UACI,cAAC,EAAD,IACA,uBACIgB,IAAKF,EACLR,QAlBS,WACbM,GAEAE,EAASG,QAAQC,QACjBL,GAAkB,KAIlBC,EAASG,QAAQE,OACjBN,GAAkB,KAUdb,UAAU,mBACVE,IAAKS,EACLS,IAAI,GACJC,MAAM,IAEV,cAAC,EAAD,CACI1C,SAAYA,EACZE,KAAQA,EACRC,MAASA,EACTF,OAAUA,EACVG,OAAUA,EACVC,GAAMA,Q,iBCiFPsC,MArHf,WACE,MAAqBrC,mBAAS,IAA9B,mBAAKsC,EAAL,KAAUC,EAAV,KACA,EAAwBvC,mBAAS,IAAjC,mBAAMwC,EAAN,KAAYC,EAAZ,KAuCA,OAxBApC,qBAAW,WACTf,EAAGkB,WAAW,SAASkC,YAAY,SAACC,GAGhC,IAFA,IAAIC,EAASD,EAAcE,KACvBC,EAAM,GACDC,EAAI,EAAGA,EAAEH,EAAOI,OAAQD,IAC7BD,EAAIG,KAAJ,aACIlD,GAAI6C,EAAOG,GAAGhD,IACX6C,EAAOG,GAAGnC,SAGrB6B,EAASK,MAGbjC,QAAQC,IAAI0B,GAEZlD,EAAGkB,WAAW,WAAWkC,YAAW,SAAAQ,GAC9BX,EAAQW,EAASL,KAAKM,KACpB,SAAA1C,GAAG,OAAEA,EAAIG,gBAGnB,IAEAC,QAAQC,IAAIwB,GACZzB,QAAQC,IAAI0B,GAGV,sBAAKzB,UAAU,MAAf,UACE,qBAAKA,UAAU,UAAf,SACE,qBAAKA,UAAU,WACVE,IAAI,2HAGX,uBACUmC,KAAK,OACL/B,QAAU,SAACC,GACPA,EAAE+B,cAAcC,MAAM,MAE1BC,SAAa,SAACjC,GACZ,IAAIkC,EAAWlC,EAAE+B,cAAcI,MAAM,GAC/BC,EAAuBF,EAAvBE,KAAOC,EAAgBH,EAAhBG,KAAOP,EAASI,EAATJ,KAGpB,IADAO,GAAY,KACH,GACPC,MAAM,8BADR,CAIE,IAAIhE,EAAO8D,EAAKG,MAAM,KAAK,GAG3B,GAAU,UAFVT,EAAOA,EAAKS,MAAM,KAAK,IAEvB,CAIAhD,QAAQC,IAAI0C,GAEZ,IAAIM,EAAQxB,EAAK,GACjBzB,QAAQC,IAAIgD,EAAM/D,IAClBc,QAAQC,IAAIlB,GAEZ,IAAImE,EAAavE,EAAQuC,IAAR,gBAAqB+B,EAAM/D,GAA3B,YAAiCiE,KAAKC,MAAM,IAAIP,IAAQQ,IAAIV,GAC7E3C,QAAQC,IAAIiD,GAGZA,EAAWI,GAAG,gBAAgB,KAAK,MAAM,WACvCJ,EAAWb,SAASnB,IAAIqC,iBAAiBC,MAAM,SAAC3C,GAC9Cb,QAAQC,IAAIY,GACZb,QAAQC,IAAIgD,EAAMQ,aAClBzD,QAAQC,IAAIgD,EAAMnE,QAKdL,EAAGkB,WAAW,SAAS+D,IAAI,CACzBC,YAAcV,EAAMQ,YAAc3E,OAASmE,EAAMnE,OAAS+B,MAAM7B,MAL1D,EAKkEC,OAJjE,EAI0EF,oBAvBzFgE,MAAM,kCA8BtB,qBAAK7C,UAAU,SAAf,SACE,cAAC,IAAD,MAEF,qBAAKA,UAAU,aAAf,SACGyB,EAAMW,KAAK,gBAAEzD,EAAF,EAAEA,SAAWC,EAAb,EAAaA,OAASC,EAAtB,EAAsBA,KAAO8B,EAA7B,EAA6BA,IAAM7B,EAAnC,EAAmCA,MAAQC,EAA3C,EAA2CA,OAASC,EAApD,EAAoDA,GAApD,OACV,cAAC,EAAD,CACEL,SAAYA,EACZC,OAAUA,EACVC,KAAQA,EACR8B,IAAOA,EACP7B,MAASA,EACTC,OAAUA,EACVC,GAAMA,aC9GlB0E,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,U","file":"static/js/main.7750d375.chunk.js","sourcesContent":["import firebase from \"firebase/compat/app\";\r\nimport \"firebase/compat/firestore\";\r\nimport \"firebase/compat/auth\";\r\nimport \"firebase/compat/storage\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyD-2JCkrvjjDsn5ChPel02kk7pQWlqc9vA\",\r\n  authDomain: \"ig-reels-clone-755ca.firebaseapp.com\",\r\n  projectId: \"ig-reels-clone-755ca\",\r\n  storageBucket: \"ig-reels-clone-755ca.appspot.com\",\r\n  messagingSenderId: \"466706368812\",\r\n  appId: \"1:466706368812:web:be51bf285ab51aec5a0489\"\r\n};\r\n\r\n  let provider = new firebase.auth.GoogleAuthProvider();\r\n\r\n  firebase.initializeApp(firebaseConfig);\r\n  // Object which will deal with login/logout\r\n  export const auth = firebase.auth();\r\n    \r\nexport const db = firebase.firestore();\r\nexport const storage = firebase.storage();\r\n\r\n\r\nexport const signInWithGoogle = () => {\r\n    // we will sign-in through pop-up\r\n    auth.signInWithPopup(provider);\r\n  }\r\n\r\nexport default db;\r\n\r\n","import { Avatar } from \"@mui/material\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport \"./VideoFooter.css\";\r\nimport { Button } from '@mui/material';\r\nimport FiberManualRecordIcon from '@mui/icons-material/FiberManualRecord';\r\nimport MusicNoteIcon from '@mui/icons-material/MusicNote';\r\nimport Ticker from \"react-ticker\";\r\nimport FavoriteIcon from '@mui/icons-material/Favorite';\r\nimport FavoriteBorderIcon from '@mui/icons-material/FavoriteBorder';\r\nimport ModeCommentIcon from '@mui/icons-material/ModeComment';\r\nimport SendIcon from '@mui/icons-material/Send';\r\nimport MoreHorizIcon from '@mui/icons-material/MoreHoriz';\r\nimport db from \"./firebase\";\r\n\r\nfunction VideoFooter( { username , imgsrc , song , likes , shares , id } ){\r\n    const[totalLikes,setLikes] = useState(likes);\r\n    const[liked,setLiked] = useState(null);\r\n    useEffect( async () => {\r\n        let docRef = db.collection(\"Reels\").doc(id);\r\n        let snapShot =  await docRef.get();\r\n        let doc = snapShot.data();\r\n        if( doc.liked ){\r\n            setLiked(true);\r\n        }\r\n        else{\r\n            doc.liked = false;\r\n            setLiked(false);\r\n        }\r\n        console.log(doc);\r\n    },totalLikes)\r\n    return(\r\n        <div className=\"videoFooter\">\r\n            <div className=\"innerVFooter\">\r\n                <Avatar src = {imgsrc}/>\r\n                <h3>\r\n                    {username} â€¢\r\n                    <Button>Follow</Button>\r\n                </h3>\r\n            </div>\r\n            <div className=\"vF_Ticker\">\r\n                <MusicNoteIcon \r\n                className=\"vF_icon\"/>\r\n                <Ticker mode=\"smooth\">\r\n                    {({index})=>(\r\n                        <>\r\n                            <h1>{song}</h1>\r\n                        </>\r\n                    )}\r\n                </Ticker>\r\n            </div>\r\n            <div className=\"videoFooter_Actions\">\r\n                <div className=\"vF_ActionsLeft\">\r\n                    { (liked) ? <FavoriteIcon\r\n                        onClick = { async (e)=> {\r\n                            if( liked==true ){\r\n                                setLiked(false);\r\n                                await db.collection(\"Reels\").doc(id).update({\r\n                                    liked : false,\r\n                                })\r\n                                setLikes(totalLikes-1);\r\n                            }\r\n                            else{\r\n                                setLiked(true);\r\n                                await db.collection(\"Reels\").doc(id).update({\r\n                                    liked : true,\r\n                                })\r\n                                setLikes(totalLikes+1);\r\n                            }\r\n                            \r\n                        }}\r\n                    /> : <FavoriteBorderIcon\r\n                            onClick = {  async (e)=> {\r\n                            if( liked==true ){\r\n                                setLiked(false);\r\n                                await db.collection(\"Reels\").doc(id).update({\r\n                                    liked : false,\r\n                                })\r\n                                setLikes(totalLikes-1);\r\n                            }\r\n                            else{\r\n                                setLiked(true);\r\n                                await db.collection(\"Reels\").doc(id).update({\r\n                                    liked : true,\r\n                                })\r\n                                setLikes(totalLikes+1);\r\n                            }\r\n                        }}/> \r\n                    }\r\n                    <ModeCommentIcon/>\r\n                    <SendIcon/>\r\n                    <MoreHorizIcon/>\r\n                </div>\r\n                <div className=\"vF_ActionsRight\">\r\n                    <div className=\"vFActionsStats\">\r\n                        <FavoriteIcon/>\r\n                        <p>{totalLikes}</p>\r\n                    </div>\r\n                    <div className=\"vFActionsStats\">\r\n                        <ModeCommentIcon/>\r\n                        <p>{shares}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default VideoFooter;\r\n\r\n","import React from \"react\";\r\nimport \"./VideoHeader.css\";\r\nimport ArrowBackIosNewOutlinedIcon from '@mui/icons-material/ArrowBackIosNewOutlined';\r\nimport CameraAltOutlinedIcon from '@mui/icons-material/CameraAltOutlined';\r\n\r\nfunction VideoHeader(){\r\n    return(\r\n        <div className=\"videoHeader\">\r\n            <ArrowBackIosNewOutlinedIcon/>\r\n            <h3>Reels</h3>\r\n            <CameraAltOutlinedIcon/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default VideoHeader;","import React, { useState,useRef } from \"react\";\r\nimport \"./VideoCard.css\";\r\nimport VideoFooter from \"./VideoFooter\";\r\nimport VideoHeader from \"./VideoHeader\";\r\n\r\nfunction VideoCard({ url , likes , shares , username , imgsrc , song , id }){\r\n    // useState\r\n    const[isVideoPlaying,setIsVideoPlaying] = useState(false);\r\n\r\n    //useRef\r\n    const videoRef = useRef(null);\r\n\r\n    const onVideoPress = () => {\r\n        if( isVideoPlaying ){\r\n            //stop the video\r\n            videoRef.current.pause();\r\n            setIsVideoPlaying(false);\r\n        }\r\n        else{\r\n            // play the video\r\n            videoRef.current.play();\r\n            setIsVideoPlaying(true);\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div className=\"videoCard\">\r\n            <VideoHeader/>\r\n            <video\r\n                ref={videoRef}\r\n                onClick={onVideoPress}\r\n                className=\"videoCard_player\"\r\n                src={url}\r\n                alt=\"\"\r\n                loop={true}\r\n            />\r\n            <VideoFooter\r\n                username = {username}\r\n                song = {song}\r\n                likes = {likes}\r\n                imgsrc = {imgsrc}\r\n                shares = {shares}\r\n                id = {id}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default VideoCard;","import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport VideoCard from './VideoCard';\nimport {db, storage} from \"./firebase\";\nimport CloudUploadIcon from '@mui/icons-material/CloudUpload';\n\nfunction App() {\n  let [user,setUser] = useState([]);\n  const[reels,setReels] = useState([]);\n\n  // useEffect( async ()=> {\n  //   db.collection(\"Users\").onSnapshot(snapshot=>{\n  //     setReels(snapshot.docs.map(\n  //       doc=>doc.data()\n  //     ))\n  //   })\n  //   db.collection(\"IG-User\").onSnapshot(snapshot=>{\n  //     setUser(snapshot.docs.map(\n  //       doc=>doc.data()\n  //     ))\n  //   })\n  // },[])\n\n  useEffect( ()=>{\n    db.collection(\"Reels\").onSnapshot( (querySnapshot)=>{\n        let docArr = querySnapshot.docs;\n        let arr = [];\n        for( let i = 0; i<docArr.length; i++ ){\n            arr.push( {\n                id: docArr[i].id,\n                ...docArr[i].data(),\n            } );\n        }\n        setReels(arr);\n    });\n\n    console.log(reels);\n\n    db.collection(\"IG-User\").onSnapshot(snapshot=>{\n          setUser(snapshot.docs.map(\n            doc=>doc.data()\n          ))\n        })\n},[]);\n  \n  console.log(user);\n  console.log(reels);\n  return (\n    \n    <div className=\"App\">\n      <div className=\"app_top\">\n        <img className=\"app_logo\"\n             src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/e/e7/Instagram_logo_2016.svg/1200px-Instagram_logo_2016.svg.png\"\n             />\n      </div>\n      <input \n                type=\"file\"\n                onClick={ (e)=>{\n                    e.currentTarget.value=null;\n                  }}\n                onChange = { (e)=>{\n                  let videoObj = e.currentTarget.files[0];\n                  let { name , size , type } = videoObj;\n\n                  size = size/1000000;\n                  if( size>10 ){\n                    alert(\"File size exceeds 10mb\");\n                        return;\n                    }\n                    let song = name.split(\"_\")[1];\n                    type = type.split(\"/\")[0];\n                    \n                    if( type!=\"video\" ){\n                      alert(\"Please upload a video file\");\n                      return;\n                    }\n                    console.log(videoObj);\n                    \n                    let user0 = user[0];\n                    console.log(user0.id);\n                    console.log(song);\n\n                    let uploadTask = storage.ref(`Reels/${user0.id}/${Date.now()+\"-\"+name}`).put(videoObj);\n                    console.log(uploadTask);\n                    \n                    \n                    uploadTask.on(\"state-changed\",null,null, ()=> {\n                      uploadTask.snapshot.ref.getDownloadURL().then( (url)=>{\n                        console.log(url);\n                        console.log(user0.displayName);\n                        console.log(user0.imgsrc);\n                        let likes = 0;\n                        let shares = 0;\n                        \n\n                            db.collection(\"Reels\").add({\n                              displayname : user0.displayName , imgsrc : user0.imgsrc , url , likes , shares , song \n                            });\n                        });\n                    });\n                  }}\n                   \n                />\n      <div className='upload'>\n        <CloudUploadIcon />\n      </div>\n      <div className=\"app_videos\">\n        {reels.map( ({username , imgsrc , song , url , likes , shares , id})=>(\n          <VideoCard \n            username = {username}\n            imgsrc = {imgsrc}\n            song = {song}\n            url = {url}\n            likes = {likes}\n            shares = {shares}\n            id = {id}\n          />\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}